name: CD

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# workflow jobs
jobs:
  provision_infra:
    name: Provision Infrastructure
    if: false
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
  
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init
        working-directory: ./IaC

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./IaC

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ./IaC

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./IaC

  destroy_infra:
    name: Destroy Infrastructure
    if: false
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init
        working-directory: ./IaC

      - name: Import Existing Resource
        run: |
          terraform import azurerm_resource_group.aks_rg /subscriptions/${{ secrets.ARM_SUBSCRIPTION_ID }}/resourceGroups/eadca2aksrg

      - name: Terraform Destroy
        run: terraform apply -auto-approve
        working-directory: ./IaC

  deploy_helm:
    name: Deploy Helm to AKS
    if: false
    needs: [ provision_infra ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS Context
        uses: azure/aks-set-context@v3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: EADCA2AKS
          resource-group: eadca2aksrg

      - name: Setup Helm
        uses: azure/setup-helm@v3

      - name: Deploy Helm Chart
        run: |
          helm install recipetracker ./recipetracker 
        working-directory: ./helm

  blue_green:
    name: Blue / Green Deployment
    if: true
    needs: [ deploy_helm ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Set AKS Context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.AKS_CLUSTER  }}

      - name: Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: nmckeown
          minimum-approvals: 1
          issue-title: "Approval Green Deployment"
          issue-body: "Approve this to start rolling out Green Deployment."

      - name: Deploy Green Version
        run: |
          kubectl -n recipetracker apply -f k8s/07-frontend-green-deployment.yaml

      - name: Wait For Green
        run: |
          kubectl -n recipetracker rollout status deployment/frontend-green

      - name: Switch To Green
        run: |
          kubectl patch service frontend \
            -n recipetracker \
            -p '{"spec": {"selector": {"app": "frontend-green"}}}'